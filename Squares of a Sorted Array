Given an integer array nums sorted in non-decreasing order, return an array of the squares of each number sorted in non-decreasing order.

Example 1:

Input: nums = [-4,-1,0,3,10]
Output: [0,1,9,16,100]
Explanation: After squaring, the array becomes [16,1,0,9,100].
After sorting, it becomes [0,1,9,16,100].
______________________________________________________________________________________________________________________________________________________________________________

Code:

class Solution {
    public int[] sortedSquares(int[] nums) {
        
        int n = nums.length;
        int []sortedArray = new int[n];
        for(int i=0;i<nums.length;i++)
        {
            sortedArray[i] = nums[i]*nums[i];
        }
        
        for(int i=0;i<sortedArray.length;i++)
        {
            for(int j=i+1;j<sortedArray.length;j++)
            {
                if(sortedArray[i] > sortedArray[j])
                {
                    int temp = sortedArray[i];
                    sortedArray[i] = sortedArray[j];
                    sortedArray[j] = temp;
                }
            }
        }
        
        return sortedArray;
    }
}
